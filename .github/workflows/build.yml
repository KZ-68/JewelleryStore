name: build

on:
  push:
    branches:
      - dev

env:
  PHP_VERSION: '8.4'
  NODE_VERSION: '22.20.0'
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: dev
    env:
      APP_NAME: Laravel
      APP_ENV: dev
      APP_KEY:
      APP_DEBUG: true
      APP_URL: http://localhost:8000

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ${{ secrets.LARAVEL_MYSQL_DATABASE_1 }}
          MYSQL_PASSWORD:
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          extensions: dom, ctype, curl, xml, libxml, mbstring, zip, pcntl, pdo, pdo_mysql, bcmath, soap, intl, gd, exif, iconv, filter, json
          coverage: none

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.20.0'

      - name: Install Dependencies
        run: |
          composer validate --strict
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
          npm install
      
      - name: Copy variables into env
        run: |
          touch .env
          echo "${{ secrets.ENV_DEV_SECRETS }}" >> .env

      - name: Dump autoload
        run: composer dump-autoload

      - name: List files for debugging
        run: |
          find app/Http/Controllers

      - name: Build assets
        run: npm run build
      
      - name: Directory permissions
        run: |
          sudo chown -R $USER:$USER storage bootstrap/cache
          chmod -R 775 storage bootstrap/cache

      - name: Install chromium and chromiumdriver
        run: | 
          sudo apt-get update 
          sudo apt-get install -y chromium chromium-driver fonts-liberation ca-certificates

      - name: Prepare test database
        run: |
          php artisan migrate --force

      - name: Run PHP Linting (Pint)
        run: |
          mkdir -p artifacts
          vendor/bin/pint --test > artifacts/pint-results.txt
        continue-on-error: true

      - name: Upload Pint results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: pint-results
          path: artifacts/pint-results.txt

      - name: Start Laravel server in background
        run: |
          php artisan serve --host=127.0.0.1 --port=8000 > /dev/null 2>&1 &
          sleep 10

      - name: Run PHPUnit Tests
        run: php artisan test
        continue-on-error: false
      
      - name: Run Lighthouse Audit
        run: |
          lighthouse http://127.0.0.1:8000 \
            --only-categories=performance \
            --output=json \
            --output-path=./lighthouse-report.json \
            --chrome-flags="--no-sandbox"

      - name: Upload Lighthouse Report
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: ./lighthouse-report.json

      - name: Run PHPUnit coverage test
        run: |
          vendor/bin/phpunit --coverage-clover coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  merge:
    runs-on: ubuntu-latest
    needs: [build-and-test]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Git Info
        run: |
          git config --global user.email " ${{ secrets.GIT_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_NAME }}"
          git remote set-url origin https://${{secrets.GITHUB_TOKEN}}@github.com/KZ-68/JewelleryStore.git

      - name: Merge dev into test
        run: |
          git fetch origin
          git checkout test
          git merge origin/dev --no-edit
          git push origin test

      - name: create pull request
        run: gh pr create -B test -H dev --title 'Merge test into main' --body 'Created by Github action'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
